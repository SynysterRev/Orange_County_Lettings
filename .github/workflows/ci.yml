name: Django CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for missing migrations
        env:
          DJANGO_SETTINGS_MODULE: oc_lettings_site.settings.base
        run: |
          python manage.py makemigrations --check --dry-run --verbosity=3 

  build-and-test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Coverage
        env:
          DJANGO_SETTINGS_MODULE: oc_lettings_site.settings.test
        run: |
          pytest --cov=. --cov-fail-under=80

  build-and-linting:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Linting with Flake8
        run: |
          flake8

  docker:
    runs-on: ubuntu-latest
    needs: [ build-and-test, build-and-linting, check-migrations ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get commit hash
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/orange-county-lettings:${{ steps.commit.outputs.short }}
            ${{ secrets.DOCKERHUB_USERNAME }}/orange-county-lettings:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: ${{ secrets.DOCKERHUB_USERNAME }}/orange-county-lettings:latest
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deployment: true

